#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Django+HTMX –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Ä—É—á–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy.sh your-domain.com

set -e

DOMAIN=$1
if [ -z "$DOMAIN" ]; then
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 your-domain.com"
    echo "–ü—Ä–∏–º–µ—Ä: $0 mysite.com"
    exit 1
fi

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ –¥–æ–º–µ–Ω–µ: $DOMAIN"
echo "üìÅ –§–∞–π–ª—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ /var/www/$DOMAIN/"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞
check_and_install_package() {
    local package=$1
    if dpkg -l | grep -q "^ii.*$package "; then
        echo "‚úÖ –ü–∞–∫–µ—Ç $package —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $package..."
        sudo apt install -y $package
    fi
}

# –û—Ç–∫–ª—é—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ command-not-found
echo "üîß –û—Ç–∫–ª—é—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ command-not-found..."
sudo rm -f /etc/apt/apt.conf.d/99command-not-found
echo 'APT::Update::Post-Invoke-Success "";' | sudo tee /etc/apt/apt.conf.d/99disable-command-not-found > /dev/null

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É..."
sudo apt update -o APT::Update::Post-Invoke-Success="" 2>/dev/null || true

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
echo "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã..."
check_and_install_package "python3"
check_and_install_package "python3-pip"
check_and_install_package "python3-venv"
check_and_install_package "nginx"
check_and_install_package "redis-server"
check_and_install_package "postgresql"
check_and_install_package "postgresql-contrib"
check_and_install_package "git"
check_and_install_package "curl"

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if ! id "django" &>/dev/null; then
    echo "üë§ –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è django..."
    sudo useradd -m -s /bin/bash django
    sudo usermod -aG sudo django
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º sudo –±–µ–∑ –ø–∞—Ä–æ–ª—è –¥–ª—è django
    echo "django ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/django
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞..."
sudo mkdir -p /var/www/$DOMAIN
sudo chown -R django:django /var/www/$DOMAIN

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -f "/var/www/$DOMAIN/manage.py" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ /var/www/$DOMAIN/"
    echo "üìã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ /var/www/$DOMAIN/ —á–µ—Ä–µ–∑ FTP"
    echo "üìÅ –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:"
    echo "   - manage.py"
    echo "   - config/ (–ø–∞–ø–∫–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏)"
    echo "   - apps/ (–ø–∞–ø–∫–∞ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏)"
    echo "   - requirements/ (–ø–∞–ø–∫–∞ —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏)"
    echo "   - templates/ (–ø–∞–ø–∫–∞ —Å —à–∞–±–ª–æ–Ω–∞–º–∏)"
    echo "   - static/ (–ø–∞–ø–∫–∞ —Å–æ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ñ–∞–π–ª–∞–º–∏)"
    exit 1
fi

echo "‚úÖ –§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ /var/www/$DOMAIN/"

# –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è django
sudo -u django bash << EOF
cd /var/www/$DOMAIN

# –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
echo "üêç –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
rm -rf venv
python3 -m venv venv

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
source venv/bin/activate

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
pip install --upgrade pip

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ (–±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ django-security)
if [ -f "requirements/base.txt" ]; then
    pip install -r requirements/base.txt
fi

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º gunicorn
pip install gunicorn

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –±–µ–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö
pip install sentry-sdk[django] || true
pip install django-cachalot || true
pip install structlog || true

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if [ ! -f ".env" ]; then
    echo "‚öôÔ∏è –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    cat > .env << EOL
DEBUG=False
SECRET_KEY=\$(python3 -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())')
ALLOWED_HOSTS=$DOMAIN,www.$DOMAIN
DATABASE_URL=postgresql://django:django_password@localhost/django_db
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0
EOL
fi

# –û–±–Ω–æ–≤–ª—è–µ–º ALLOWED_HOSTS –≤ .env —Ñ–∞–π–ª–µ
echo "üîß –û–±–Ω–æ–≤–ª—è–µ–º ALLOWED_HOSTS..."
sed -i "s/ALLOWED_HOSTS=.*/ALLOWED_HOSTS=$DOMAIN,www.$DOMAIN/" .env

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL
echo "üóÑÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö..."
sudo -u postgres psql << 'POSTGRES_EOF'
DO \$\$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_database WHERE datname = 'django_db') THEN
        CREATE DATABASE django_db;
    END IF;
END
\$\$;

DO \$\$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'django') THEN
        CREATE USER django WITH PASSWORD 'django_password';
        GRANT ALL PRIVILEGES ON DATABASE django_db TO django;
        ALTER USER django CREATEDB;
    END IF;
END
\$\$;
POSTGRES_EOF

# –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
python manage.py migrate

# –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
echo "üëë –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
python manage.py createsuperuser --noinput --username admin --email admin@$DOMAIN || true

# –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
echo "üìÅ –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
python manage.py collectstatic --noinput

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤
mkdir -p media/posters media/videos media/previews media/avatars

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p logs

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
chmod -R 755 media/
chmod -R 755 static/
chmod -R 755 logs/

EOF

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx
echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Nginx..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Nginx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v nginx >/dev/null 2>&1; then
    echo "‚ùå Nginx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    sudo apt install -y nginx
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É Nginx
if [ ! -d "/etc/nginx" ]; then
    echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è /etc/nginx –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º..."
    sudo mkdir -p /etc/nginx/sites-available
    sudo mkdir -p /etc/nginx/sites-enabled
fi

# –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
if [ -f "/etc/nginx/sites-enabled/default" ]; then
    echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é..."
    sudo rm -f /etc/nginx/sites-enabled/default
fi

sudo tee /etc/nginx/sites-available/$DOMAIN << EOF
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name $DOMAIN www.$DOMAIN;
    
    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö —Ñ–∞–π–ª–æ–≤
    client_max_body_size 500M;
    
    # –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    location /static/ {
        alias /var/www/$DOMAIN/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # –ú–µ–¥–∏–∞ —Ñ–∞–π–ª—ã
    location /media/ {
        alias /var/www/$DOMAIN/media/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
}
EOF

# –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º —Å–∞–π—Ç
sudo ln -sf /etc/nginx/sites-available/$DOMAIN /etc/nginx/sites-enabled/

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Nginx..."
if sudo nginx -t; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º Nginx
    sudo systemctl reload nginx
else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx"
    echo "üîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    sudo tee /etc/nginx/sites-available/$DOMAIN << 'EOF'
server {
    listen 80;
    server_name _;
    
    location / {
        proxy_pass http://127.0.0.1:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}
EOF
    
    sudo nginx -t && sudo systemctl reload nginx
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Django
echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
sudo tee /etc/systemd/system/django-$DOMAIN.service << EOF
[Unit]
Description=Django+HTMX Project - $DOMAIN
After=network.target

[Service]
Type=simple
User=django
Group=django
WorkingDirectory=/var/www/$DOMAIN
Environment=PATH=/var/www/$DOMAIN/venv/bin
ExecStart=/var/www/$DOMAIN/venv/bin/gunicorn config.wsgi:application --bind 127.0.0.1:8000 --workers 3 --timeout 120 --env DJANGO_SETTINGS_MODULE=config.settings.production
ExecReload=/bin/kill -s HUP \$MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
EOF

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Celery
echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Celery —Å–µ—Ä–≤–∏—Å..."
sudo tee /etc/systemd/system/celery-$DOMAIN.service << EOF
[Unit]
Description=Celery Worker - $DOMAIN
After=network.target

[Service]
Type=simple
User=django
Group=django
WorkingDirectory=/var/www/$DOMAIN
Environment=PATH=/var/www/$DOMAIN/venv/bin
ExecStart=/var/www/$DOMAIN/venv/bin/celery -A config worker --loglevel=info
ExecReload=/bin/kill -s HUP \$MAINPID
Restart=always

[Install]
WantedBy=multi-user.target
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã..."
sudo systemctl daemon-reload
sudo systemctl enable django-$DOMAIN celery-$DOMAIN redis-server postgresql nginx
sudo systemctl start redis-server postgresql nginx
sleep 5
sudo systemctl start django-$DOMAIN
sleep 3
sudo systemctl start celery-$DOMAIN

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å certbot –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL
echo "üîí –ò—Å–ø—Ä–∞–≤–ª—è–µ–º certbot –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL..."

# –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üîß –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot..."
sudo apt remove -y certbot python3-certbot-nginx || true
sudo apt autoremove -y || true

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã –¥–ª—è Python
sudo apt install -y python3-dev python3-pip python3-venv libssl-dev libffi-dev build-essential

# –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot —á–µ—Ä–µ–∑ snap (–±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–±)
if command -v snap >/dev/null 2>&1; then
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot —á–µ—Ä–µ–∑ snap..."
    sudo snap install core; sudo snap refresh core
    sudo snap install --classic certbot
    sudo ln -sf /snap/bin/certbot /usr/bin/certbot
else
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º certbot —á–µ—Ä–µ–∑ pip..."
    sudo python3 -m pip install --upgrade pip
    sudo python3 -m pip install certbot certbot-nginx
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É certbot
if command -v certbot >/dev/null 2>&1; then
    echo "‚úÖ Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç..."
    if [ ! -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
        sudo certbot --nginx -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email admin@$DOMAIN --redirect || echo "‚ö†Ô∏è SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏"
    else
        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è $DOMAIN"
    fi
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL
    echo "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL..."
    if command -v snap >/dev/null 2>&1; then
        (crontab -l 2>/dev/null; echo "0 12 * * * /snap/bin/certbot renew --quiet") | crontab -
    else
        (crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet") | crontab -
    fi
else
    echo "‚ö†Ô∏è Certbot –Ω–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, SSL –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞"
    echo "üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL –≤—Ä—É—á–Ω—É—é –ø–æ–∑–∂–µ"
fi

# –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å ALLOWED_HOSTS
echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º ALLOWED_HOSTS –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Django..."
sudo -u django bash << EOF
cd /var/www/$DOMAIN
source venv/bin/activate

# –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
cat > config/settings/production.py << 'SETTINGS_EOF'
import os
from .base import *

DEBUG = False

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '$DOMAIN',
    'www.$DOMAIN',
]

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django_db',
        'USER': 'django',
        'PASSWORD': 'django_password',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Redis
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
SETTINGS_EOF

EOF

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–∏—Å
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Django —Å–µ—Ä–≤–∏—Å..."
sudo systemctl restart django-$DOMAIN

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 3

echo "Django —Å—Ç–∞—Ç—É—Å:"
sudo systemctl status django-$DOMAIN --no-pager -l | head -10

echo "Celery —Å—Ç–∞—Ç—É—Å:"
sudo systemctl status celery-$DOMAIN --no-pager -l | head -10

echo "Nginx —Å—Ç–∞—Ç—É—Å:"
sudo systemctl status nginx --no-pager -l | head -5

echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üåê –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$DOMAIN"
echo "üëë –ê–¥–º–∏–Ω–∫–∞: https://$DOMAIN/admin/"
echo ""
echo "üìù –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Django: sudo systemctl restart django-$DOMAIN"
echo "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Celery: sudo systemctl restart celery-$DOMAIN"
echo "   –õ–æ–≥–∏ Django: sudo journalctl -u django-$DOMAIN -f"
echo "   –õ–æ–≥–∏ Celery: tail -f /var/www/$DOMAIN/logs/celery.log"
echo ""
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞: /var/www/$DOMAIN/"
echo "üîß –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∑–∞–≥—Ä—É–∂–∞–π—Ç–µ –∏—Ö –≤ /var/www/$DOMAIN/"
echo ""
echo "üéâ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç!"
